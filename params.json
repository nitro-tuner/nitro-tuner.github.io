{"name":"Nitro","tagline":"Automatic Performance Tuning Framework","body":"## Overview\r\n\r\nNitro is a programmer-directed code variant tuning framework, jointly developed by the [University of Utah](http://www.cs.utah.edu) and [NVIDIA Research](http://research.nvidia.com).\r\n\r\nNitro utilizes machine learning-based classification to automatically find the best implementation (variant) of a computation for a given input. It provides C++ and Python interfaces for programmers to specify variants, input dataset features, and constraints. In 5 real-world irregular GPU benchmarks, Nitro-tuned variants achieve over 93% of the performance achieved by variants selected through exhaustive search on new, unseen inputs.\r\n\r\n## Getting Started\r\n\r\nYou can download a pre-alpha version of Nitro from [here](https://github.com/nitro-tuner/nitro/releases/tag/v0.5-pre-alpha). Alternatively, feel free to clone from the [repository](https://github.com/nitro-tuner/nitro) directly. For installation instructions and getting started, check out the [tutorial](https://github.com/nitro-tuner/nitro/blob/master/doc/tutorial.pdf).\r\n\r\n## Publications\r\n\r\nCheck out the following paper for an overview of Nitro's design, and some initial results showcasing Nitro's effectiveness.\r\n\r\n[**Nitro: A Framework for Adaptive Code Variant Tuning**](http://www.cs.utah.edu/~sauravm/docs/nitro_ipdps2014.pdf)\r\n<br />_S. Muralidharan, M. Shantharam, M. Hall, M. Garland, B. Catanzaro_; Proceedings of the 28th IEEE International Parallel & Distributed Processing Symposium, pp. 501-512, May 2014, Phoenix (Arizona) USA","google":"UA-52413329-1","note":"Don't delete this file! It's used internally to help with page regeneration."}